generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userKey       Int        @id @default(autoincrement()) @map("user_key")
  id            String     @unique @map("id")
  pw            String     @map("pw")
  nickname      String     @unique @map("nickname")
  squadMem1     Int        @default(0) @map("squad_mem_1")
  squadMem2     Int        @default(0) @map("squad_mem_2")
  squadMem3     Int        @default(0) @map("squad_mem_3")
  favoriteAgent Int        @default(0) @map("favorite_agent")
  createdAt     DateTime   @default(now()) @map("created_at")
  synergy       String     @default("none") @map("synergy")
  asset         Assets?
  myAgent       MyAgents[]
  rank          Ranks?

  @@map("Users")
}

model Assets {
  assetKey Int   @id @default(autoincrement()) @map("asset_key")
  userKey  Int   @unique @map("user_key")
  cash     Int   @default(100000) @map("cash")
  mileage  Int   @default(0) @map("mileage")
  enhancer Int   @default(10) @map("enhancer")
  countA   Int   @default(0) @map("count_A")
  countS   Int   @default(0) @map("count_S")
  user     Users @relation(fields: [userKey], references: [userKey], onDelete: Cascade)

  @@map("Assets")
}

model Ranks {
  rankKey   Int      @id @default(autoincrement()) @map("rank_key")
  userKey   Int      @unique @map("user_key")
  winCount  Int      @default(0) @map("win_count")
  loseCount Int      @default(0) @map("lose_count")
  drawCount Int      @default(0) @map("draw_count")
  mmr       Int      @default(5000) @map("mmr")
  updatedAt DateTime @updatedAt @map("updated_at")
  user      Users    @relation(fields: [userKey], references: [userKey], onDelete: Cascade)

  @@map("Ranks")
}

model Agents {
  agentKey Int        @id @default(autoincrement()) @map("agent_key")
  name     String     @map("name")
  team     String     @map("team")
  position Pos        @map("position")
  grade    Grade      @map("grade")
  url      String?    @map("url")
  myAgent  MyAgents[]
  stat     Stats?

  @@map("Agents")
}

model Stats {
  statKey  Int    @id @default(autoincrement()) @map("stat_key")
  agentKey Int    @unique @map("agent_key")
  ad       Int    @default(100) @map("ad")
  ap       Int    @default(100) @map("ap")
  hp       Int    @default(100) @map("hp")
  mp       Int    @default(100) @map("mp")
  def      Int    @default(100) @map("def")
  crit     Int    @default(100) @map("crit")
  agent    Agents @relation(fields: [agentKey], references: [agentKey], onDelete: Cascade)

  @@map("Stats")
}

model MyAgents {
  userKey    Int      @map("user_key")
  agentKey   Int      @map("agent_key")
  name       String   @map("name")
  level      Int      @default(1) @map("level")
  class      Int      @default(0) @map("class")
  count      Int      @default(1) @map("count")
  obtainedAt DateTime @updatedAt @map("obtained_at")
  agent      Agents   @relation(fields: [agentKey], references: [agentKey], onDelete: Cascade)
  user       Users    @relation(fields: [userKey], references: [userKey], onDelete: Cascade)

  @@id([userKey, agentKey])
  @@index([agentKey], map: "MyAgents_agent_key_fkey")
  @@map("MyAgents")
}

enum Pos {
  tanker
  warrior
  wizard
}

enum Grade {
  s
  a
}
