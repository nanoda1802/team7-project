generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Agents {
  agent_key Int             @id @default(autoincrement())
  name      String
  team      String
  position  Agents_position
  grade     Agents_grade
  MyAgents  MyAgents[]
  Stats     Stats?
}

model Assets {
  asset_key Int   @id @default(autoincrement())
  user_key  Int   @unique
  cash      Int   @default(100000)
  mileage   Int   @default(0)
  enhancer  Int   @default(10)
  count_A   Int   @default(0)
  count_S   Int   @default(0)
  Users     Users @relation(fields: [user_key], references: [user_key], onDelete: Cascade)
}

model MyAgents {
  my_agent_key Int      @id @default(autoincrement())
  user_key     Int
  agent_key    Int
  level        Int      @default(1)
  count        Int      @default(1)
  obtained_at  DateTime
  class        Int      @default(0)
  name         String
  Agents       Agents   @relation(fields: [agent_key], references: [agent_key], onDelete: Cascade)
  Users        Users    @relation(fields: [user_key], references: [user_key], onDelete: Cascade)

  @@index([agent_key], map: "MyAgents_agent_key_fkey")
  @@index([user_key], map: "MyAgents_user_key_fkey")
}

model Ranks {
  rank_key   Int      @id @default(autoincrement())
  user_key   Int      @unique
  win_count  Int      @default(0)
  lose_count Int      @default(0)
  draw_count Int      @default(0)
  mmr        Int      @default(5000)
  updated_at DateTime
  Users      Users    @relation(fields: [user_key], references: [user_key], onDelete: Cascade)
}

model Stats {
  stat_key  Int    @id @default(autoincrement())
  agent_key Int    @unique
  ad        Int    @default(100)
  ap        Int    @default(100)
  hp        Int    @default(100)
  mp        Int    @default(100)
  def       Int    @default(100)
  crit      Int    @default(100)
  Agents    Agents @relation(fields: [agent_key], references: [agent_key], onDelete: Cascade)
}

model Users {
  user_key       Int        @id @default(autoincrement())
  id             String
  pw             String
  nickname       String
  squad_mem_1    Int        @default(0)
  squad_mem_2    Int        @default(0)
  squad_mem_3    Int        @default(0)
  favorite_agent Int        @default(0)
  created_at     DateTime   @default(now())
  Assets         Assets?
  MyAgents       MyAgents[]
  Ranks          Ranks?
}

enum Agents_position {
  tanker
  warrior
  wizard
}

enum Agents_grade {
  s
  a
}
